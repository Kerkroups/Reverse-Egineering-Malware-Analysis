Base 10:

Base 10 includes 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.
Here is 243 in base 10:
243 = (102 * 2) + (101 * 4) + (100 * 3) = 200 + 40 + 3.

Base 7:
243(in base 7) = (72 * 2) + (71 * 4) + (70 * 3) = 98 + 28 + 3 = 129(in decimal).
Base 7 includes 0, 1, 2, 3, 4, 5, 6.
9 isn't in base 7, so how do we represent it in base 7?
9(in decimal) = (71 * 1) + (70 * 2) = 7 + 2. Our answer is going to be 12(base7) = 9(base10).

Base 2:
Base2/Binary:
What about base 2? Base 2 includes 0 and 1. It works the same as the others. Here are some good values to know:
210 = 1024, 29 = 512, 28 = 256, 27 = 128, etc.

Hexadecimal/Base 16:

BiTS AND BYTES(https://www.tutorialspoint.com/cprogramming/c_data_types.htm):
- Bit is one binary digit. Can be 0 or 1.
- Nibble is 4 bits.
- Byte is 8 bits.
- Word is 2 bytes.
- Double Word (DWORD) is 4 bytes. Twice the size of a word.
- Quad Word (QWORD) is 8 bytes. Four times the size of a word.

- Char - 1 byte (8 bits).
- Signed Int:
    16 bit is -32,768 to 32,767.
    32 bit is -2,147,483,648 to 2,147,483,647.
    64-bit is -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807.

- Unsigned Int - Minimum is zero, maximum is twice that of a signed int (of the same size).
- Bool - 1 byte.

BINARY OPERATIONS:

- NOT ("!"): NOT 1 = 0, NOT 0 = 1, !1100 = 0011;
- AND ("&"): 1 AND 1 = 1, 1 AND 0 = 0, 0 AND 0 = 0, 1100 AND 1010 = 1000;
- OR ("|"): 1 OR 1 = 1, 1 OR 0 = 1, 0 OR 0 = 0, 1100 | 1010 = 1110;




